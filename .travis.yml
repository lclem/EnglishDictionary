language: android
jdk: oraclejdk8
sudo: false
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-28

    # The SDK version used to compile your project
    - android-17
    - android-18
    - android-19
    - android-21
    - android-22
    - android-24

    # Additional components
    #- extra-google-google_play_services
    #- extra-google-m2repository
    #- extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    # not supported yet
    - sys-img-x86-android-28
    - sys-img-armeabi-v7a-android-17
    - sys-img-armeabi-v7a-android-18
    - sys-img-armeabi-v7a-android-19
    - sys-img-armeabi-v7a-android-21
    - sys-img-armeabi-v7a-android-22
    - sys-img-armeabi-v7a-android-24
    
before_install:
#  - yes | sdkmanager "platforms;android-28"
  - chmod +x gradlew
  - mkdir -p "$ANDROID_HOME/licenses"
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - yes | sdkmanager --update
  - yes | sdkmanager --licenses

#before_cache:
#  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
#  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
#cache:
#  directories:
#    - $HOME/.gradle/caches/
#    - $HOME/.gradle/wrapper/
#    - $HOME/.android/build-cache

before_script:
  - echo no | avdmanager create avd --force -n test0 -k "system-images;android-28;default;x86"
  - emulator -avd test0 -memory 1500 -no-accel -gpu swiftshader -camera-back none -camera-front none -no-boot-anim -no-snapshot-save -no-snapstorage &
  - echo no | avdmanager create avd -n test1 -k "system-images;android-17;default;armeabi-v7a" -c 200M -f # & # &>/dev/null
  - echo no | avdmanager create avd -n test2 -k "system-images;android-18;default;armeabi-v7a" -c 200M -f # & # &>/dev/null
  - echo no | avdmanager create avd -n test3 -k "system-images;android-19;default;armeabi-v7a" -c 200M -f # & # &>/dev/null
  - echo no | avdmanager create avd -n test4 -k "system-images;android-21;default;armeabi-v7a" -c 200M -f # & # &>/dev/null
  - echo no | avdmanager create avd -n test5 -k "system-images;android-22;default;armeabi-v7a" -c 200M -f # & # &>/dev/null
  - echo no | avdmanager create avd -n test6 -k "system-images;android-24;default;armeabi-v7a" -c 200M -f # & # &>/dev/null
  - emulator -avd test1 -no-audio -no-window & # &>/dev/null
  - emulator -avd test2 -no-audio -no-window & # &>/dev/null
  - emulator -avd test3 -no-audio -no-window & # &>/dev/null
  - emulator -avd test4 -no-audio -no-window & # &>/dev/null
  - emulator -avd test5 -no-audio -no-window & # &>/dev/null
  - emulator -avd test6 -no-audio -no-window & # &>/dev/null
  - android-wait-for-emulator
  - adb shell settings put global window_animation_scale 0.0
  - adb shell settings put global transition_animation_scale 0.0
  - adb shell settings put global animator_duration_scale 0.0
  
  - export GRADLE_USER_HOME=$(pwd)/.gradle

script: echo yes | ./gradlew build connectedCheck connectedAndroidTest --scan
